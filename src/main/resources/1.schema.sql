DROP TABLE IF EXISTS groups_lectures, groups_subjects, teachers_subjects, lectures, marks, subjects, durations,
    lecture_rooms, teachers, employees, students, addresses, groups, departments, faculties CASCADE;

CREATE TABLE IF NOT EXISTS faculties
(
    faculty_id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    faculty_name varchar(30) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS departments
(
    department_id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    department_name varchar(30) NOT NULL UNIQUE,
    faculty_id      int REFERENCES faculties (faculty_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS groups
(
    group_id      int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    group_name    varchar(10) NOT NULL UNIQUE,
    department_id int REFERENCES departments (department_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS people
(
    id           int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    first_name   varchar(30)        NOT NULL,
    last_name    varchar(30)        NOT NULL,
    gender       varchar            NOT NULL,
    birth_date   date               NOT NULL,
    email        varchar(30) UNIQUE NOT NULL,
    phone_number varchar(12)        NOT NULL,
    password     varchar            NOT NULL,
    role         varchar            NOT NULL
);

CREATE TABLE IF NOT EXISTS addresses
(
    address_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    country    varchar(30) NOT NULL,
    region     varchar(30),
    city       varchar(30) NOT NULL,
    street     varchar(30) NOT NULL,
    apartment  varchar(5),
    postcode   varchar(5)  NOT NULL,
    person_id  int UNIQUE REFERENCES people (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS students
(
    id              int PRIMARY KEY REFERENCES people (id) ON DELETE CASCADE,
    group_id        int     NOT NULL REFERENCES groups (group_id) ON DELETE CASCADE,
    education_form  varchar NOT NULL,
    enrollment_date date    NOT NULL
);

CREATE TABLE IF NOT EXISTS employees
(
    id              int PRIMARY KEY REFERENCES people (id) ON DELETE CASCADE,
    department_id   int     REFERENCES departments (department_id) ON DELETE SET NULL ,
    job_title       varchar NOT NULL,
    employment_type varchar NOT NULL,
    employment_date date    NOT NULL
);

CREATE TABLE IF NOT EXISTS teachers
(
    teacher_id  int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    degree      varchar NOT NULL,
    employee_id int UNIQUE REFERENCES employees (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS lecture_rooms
(
    room_id     int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    room_number int NOT NULL UNIQUE,
    capacity    int NOT NULL
);

CREATE TABLE IF NOT EXISTS durations
(
    duration_id int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    start_time  varchar(10) NOT NULL UNIQUE,
    end_time    varchar(10) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS subjects
(
    subject_id   int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    subject_name varchar(30) NOT NULL,
    start_date   date        NOT NULL,
    end_date     date        NOT NULL
);

CREATE TABLE IF NOT EXISTS marks
(
    mark_id    int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mark_value varchar(2) NOT NULL,
    student_id int REFERENCES students (id) ON DELETE CASCADE,
    subject_id int REFERENCES subjects (subject_id) ON DELETE CASCADE

);

CREATE TABLE IF NOT EXISTS lectures
(
    lecture_id  int GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    subject_id  int  REFERENCES subjects (subject_id) ON DELETE SET NULL,
    teacher_id  int  REFERENCES teachers (teacher_id) ON DELETE SET NULL,
    room_id     int  REFERENCES lecture_rooms (room_id) ON DELETE SET NULL,
    duration_id int  REFERENCES durations (duration_id) ON DELETE SET NULL,
    date        date NOT NULL
);

CREATE TABLE IF NOT EXISTS teachers_subjects
(
    teacher_id int REFERENCES teachers (teacher_id) ON UPDATE CASCADE ON DELETE CASCADE,
    subject_id int REFERENCES subjects (subject_id) ON UPDATE CASCADE ON DELETE CASCADE,
    UNIQUE (teacher_id, subject_id)
);

CREATE TABLE IF NOT EXISTS groups_subjects
(
    group_id   int REFERENCES groups (group_id) ON UPDATE CASCADE ON DELETE CASCADE,
    subject_id int REFERENCES subjects (subject_id) ON UPDATE CASCADE ON DELETE CASCADE,
    UNIQUE (group_id, subject_id)
);

CREATE TABLE IF NOT EXISTS groups_lectures
(
    group_id   int REFERENCES groups (group_id) ON UPDATE CASCADE ON DELETE CASCADE,
    lecture_id int REFERENCES lectures (lecture_id) ON UPDATE CASCADE ON DELETE CASCADE,
    UNIQUE (group_id, lecture_id)
);
